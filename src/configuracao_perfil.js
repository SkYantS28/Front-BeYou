import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { User, Bell, LogOut } from "lucide-react";
import { FaFacebookF, FaTwitter, FaYoutube, FaInstagram } from "react-icons/fa";
import {
    Background,
    Header,
    LogoContainer,
    ImgLogo,
    SearchBar,
    Menu,
    MenuLink,
    BotaoSair,
    PerfilLink,
    NoticacaoLink,
    Perfil,
    Noticacao,
    Sair,
    Icons,

    ConfiguracaoContainer,
    Opcoes,
    Titulo,
    TituloOpcoes,
    Descricao,
    OpcaoIdioma,
    TextoProblema,
    BotaoEnviar,
  
    Footer,
    ConteudoFooter,
    Coluna,
    SocialIcons,
    FooterLink,
    Links,
    Logo,
    Direitos,
    TitleFooter,
    Texto
} from "./components/configuracaoestrutura";

function MeuPerfil() {
    const handleLogout = () => {
        navigate("/login"); 
      };
  
    // linkar paginas
    const navigate = useNavigate(); 
  
    // levar ate a pagina inicial
    const reloadPage = (event) => {
        event.preventDefault();
        navigate('/PaginaInicial');
    };

    const [itemAtivo, setItemAtivo] = useState(null);

    return (
        <Background>
            <Header>
                <LogoContainer>
                    <ImgLogo onClick={reloadPage} src="/img/new_logo.jpg" alt="Logo" />
                </LogoContainer>

                <Menu>
                    <MenuLink onClick={() => navigate("/PaginaInicial")}>Inicio</MenuLink>

                    <MenuLink onClick={() => navigate("/Carrinho")}>Meu Carrinho</MenuLink>

                    <MenuLink onClick={() => navigate("/Pesquisar")}>Pesquisar</MenuLink>

                    <MenuLink onClick={() => navigate("/Agendamentos")}>Agendamentos</MenuLink>

                    <MenuLink onClick={() => navigate("/FAvoritos_perfil")}>Favoritos</MenuLink>

                </Menu>
                
                <SearchBar type="text" placeholder="Busque por item ou loja" />

                <Icons>
                    <Perfil>
                        <PerfilLink onClick={() => navigate("/MeuPerfil")}>
                            <User className="icone" />
                        </PerfilLink>
                    </Perfil>
            
                    <Noticacao>
                        <NoticacaoLink onClick={() => navigate("/notificacoes_perfil")}>
                            <Bell className="icone" />
                        </NoticacaoLink>
                    </Noticacao>
            
                    <Sair>
                        <BotaoSair onClick={handleLogout}>
                            <LogOut className="icone" />
                        </BotaoSair>
                    </Sair>
                </Icons>

            </Header>

            <main>
                <ConfiguracaoContainer>
                    <Titulo>Configura√ß√µes</Titulo>
                    <TermosCondicoes ativo={itemAtivo === "termos"} setItemAtivo={() => setItemAtivo(itemAtivo === "termos" ? null : "termos")} />
                    <PoliticaPrivacidade ativo={itemAtivo === "privacidade"} setItemAtivo={() => setItemAtivo(itemAtivo === "privacidade" ? null : "privacidade")} />
                    <Sobre ativo={itemAtivo === "sobre"} setItemAtivo={() => setItemAtivo(itemAtivo === "sobre" ? null : "sobre")} />
                    <PerguntasFrequentes ativo={itemAtivo === "faq"} setItemAtivo={() => setItemAtivo(itemAtivo === "faq" ? null : "faq")} />
                    <Idiomas ativo={itemAtivo === "idiomas"} setItemAtivo={() => setItemAtivo(itemAtivo === "idiomas" ? null : "idiomas")} />
                    <ConfiguracaoNotificacao ativo={itemAtivo === "notificacoes"} setItemAtivo={() => setItemAtivo(itemAtivo === "notificacoes" ? null : "notificacoes")} />
                    <RelatarProblema ativo={itemAtivo === "problema"} setItemAtivo={() => setItemAtivo(itemAtivo === "problema" ? null : "problema")} />
                </ConfiguracaoContainer>
            </main>

            <Footer>
                <ConteudoFooter>
                    <Coluna>
                        <TitleFooter>BeYou</TitleFooter>

                        <FooterLink>Site Institucional</FooterLink>
                        <FooterLink>Fale Conosco</FooterLink>
                        <FooterLink>Conta e Seguran√ßa</FooterLink>
                        <FooterLink>Carreiras</FooterLink>
                        <FooterLink>Entregadores</FooterLink>

                    </Coluna>

                    <Coluna>
                        <TitleFooter>Descubra</TitleFooter>

                        <FooterLink>Cadastre sua loja</FooterLink>
                        <FooterLink>Beyou Shop</FooterLink>
                        <FooterLink>BeYou Empresas</FooterLink>
                        <FooterLink>Blog BeYou Empresas</FooterLink>
                    </Coluna>
                    
                    <Coluna>
                        <TitleFooter>Social</TitleFooter>
                        <SocialIcons>
                            <FooterLink><FaFacebookF/></FooterLink>
                            <FooterLink><FaTwitter/></FooterLink>
                            <FooterLink><FaYoutube/></FooterLink>
                            <FooterLink><FaInstagram/></FooterLink>
                        </SocialIcons>
                    </Coluna>
                    
                    <Direitos>

                        <Logo src="/img/new_logo.jpg" alt="BeYou Logo" />
                        
                        <Texto>¬© Copyright 2025 - BeYou. Todos os direitos reservados.</Texto>

                        <br></br>
                        
                        <Texto>CNPJ 00.000.000/0000-00 / Endere√ßo fict√≠cio - Cidade/Estado - CEP 00000-000</Texto>

                    </Direitos>

                    <Links>
                        <FooterLink>Termos e Condi√ß√µes de Uso</FooterLink> | <FooterLink>Codigo de Conduta</FooterLink> | <FooterLink>Privacidade</FooterLink> | <FooterLink>Dicas de Seguran√ßa</FooterLink>
                    </Links>

                </ConteudoFooter>

            </Footer>
        </Background>
    );
}

function TermosCondicoes({ ativo, setItemAtivo }) {
    return (
        <Opcoes onClick={setItemAtivo}>
            <TituloOpcoes>Termos e Condi√ß√µes</TituloOpcoes>

            <Descricao visivel={ativo}>

            <b>Bem-vindo ao BeYou!</b> 

            Antes de utilizar nossos servi√ßos, √© essencial que voc√™ leia e compreenda nossos <b>Termos e Condi√ß√µes</b>. Este documento estabelece as diretrizes para o uso da plataforma, garantindo uma experi√™ncia segura e transparente para todos os usu√°rios.<br /><br />

            Nosso aplicativo tem como objetivo conectar clientes a sal√µes de beleza de maneira simples e eficiente, permitindo que voc√™ encontre e agende servi√ßos pr√≥ximos de sua localiza√ß√£o. Ao acessar e utilizar nossa plataforma, voc√™ concorda com as regras estabelecidas, incluindo:<br /><br />

            <b>üìå Cadastro e Responsabilidade do Usu√°rio</b> ‚Äì Para utilizar alguns dos recursos do aplicativo, pode ser necess√°rio criar uma conta e fornecer informa√ß√µes pessoais. Voc√™ √© respons√°vel pela veracidade dos dados informados e pela seguran√ßa de suas credenciais de acesso.<br /><br />

            <b>üîó Funcionamento do Aplicativo</b> ‚Äì A plataforma atua como intermediadora entre clientes e sal√µes de beleza, mas n√£o se responsabiliza diretamente pelos servi√ßos prestados pelos estabelecimentos cadastrados.<br /><br />

            <b>üí≥ Pagamentos e Cancelamentos</b> ‚Äì Dependendo das funcionalidades dispon√≠veis, o aplicativo pode permitir o pagamento antecipado de servi√ßos. Informa√ß√µes sobre reembolsos, cancelamentos e taxas ser√£o descritas nesta se√ß√£o.<br /><br />

            <b>‚öñÔ∏è Conduta do Usu√°rio</b> ‚Äì O uso da plataforma deve ser feito de maneira √©tica e respeitosa. Qualquer comportamento abusivo, fraudulento ou que viole nossas diretrizes pode resultar na suspens√£o da conta.<br /><br />

            <b>üì¢ Altera√ß√µes nos Termos</b> ‚Äì Podemos atualizar os Termos e Condi√ß√µes periodicamente para aprimorar nossa plataforma e atender a requisitos legais. Sempre notificaremos os usu√°rios sobre mudan√ßas relevantes.<br /><br />

            Caso tenha d√∫vidas ou precise de mais informa√ß√µes, consulte o documento completo de <b>Termos e Condi√ß√µes</b> diretamente no aplicativo ou entre em contato com nossa equipe de suporte.
            </Descricao>
        </Opcoes>
    );
}

function PoliticaPrivacidade({ ativo, setItemAtivo }) {
    return (
        <Opcoes onClick={setItemAtivo}>
            <TituloOpcoes>Politica de Privacidade</TituloOpcoes>

            <Descricao visivel={ativo}>
            A sua privacidade √© uma de nossas prioridades. No <b>BeYou</b>, garantimos que seus dados pessoais sejam tratados com responsabilidade e transpar√™ncia. Nossa <b>Pol√≠tica de Privacidade</b> detalha como coletamos, utilizamos, armazenamos e protegemos suas informa√ß√µes.<br /><br />

            <b>1. Coleta de Informa√ß√µes</b><br />
            Coletamos dados essenciais para o funcionamento da plataforma, incluindo:<br /><br />

            <b>Informa√ß√µes de Cadastro:</b> Nome, e-mail, telefone e outras informa√ß√µes fornecidas durante a cria√ß√£o da conta.<br />
            <b>Localiza√ß√£o:</b> Para facilitar a busca por sal√µes pr√≥ximos, podemos solicitar permiss√£o para acessar sua localiza√ß√£o.<br />
            <b>Hist√≥rico de Uso:</b> Registramos suas intera√ß√µes com o aplicativo, como servi√ßos agendados, avalia√ß√µes feitas e prefer√™ncias selecionadas.<br /><br />

            <b>2. Uso dos Dados</b><br />
            Seus dados s√£o utilizados para:<br /><br />

            ‚úîÔ∏è Personalizar sua experi√™ncia, recomendando sal√µes e servi√ßos que possam te interessar.<br />
            ‚úîÔ∏è Melhorar o funcionamento do aplicativo com base no comportamento dos usu√°rios.<br />
            ‚úîÔ∏è Garantir a seguran√ßa da plataforma e evitar fraudes.<br />
            ‚úîÔ∏è Enviar notifica√ß√µes sobre promo√ß√µes, novidades e atualiza√ß√µes (caso voc√™ autorize).<br /><br />

            <b>3. Compartilhamento de Informa√ß√µes</b><br />
            O <b>BeYou</b> n√£o vende ou compartilha seus dados pessoais com terceiros sem sua permiss√£o. No entanto, algumas informa√ß√µes podem ser compartilhadas com os sal√µes de beleza cadastrados quando voc√™ agenda um servi√ßo, garantindo que sua reserva seja processada corretamente.<br /><br />

            <b>4. Seguran√ßa e Armazenamento</b><br />
            Adotamos medidas de seguran√ßa para proteger suas informa√ß√µes contra acessos n√£o autorizados, vazamentos ou uso indevido. Seus dados s√£o armazenados em servidores seguros e respeitamos todas as regulamenta√ß√µes de prote√ß√£o de dados vigentes.<br /><br />

            Caso tenha d√∫vidas ou queira saber mais detalhes, consulte nossa <b>Pol√≠tica de Privacidade</b> completa no aplicativo.


            </Descricao>
        </Opcoes>
    );
}

function Sobre({ ativo, setItemAtivo }) {
    return (
        <Opcoes onClick={setItemAtivo}>
            <TituloOpcoes>Sobre</TituloOpcoes>
            <Descricao visivel={ativo}>
            O BeYou foi criado com um prop√≥sito claro: facilitar a busca e o agendamento de servi√ßos de beleza,<br />
            tornando a experi√™ncia dos usu√°rios mais r√°pida, intuitiva e agrad√°vel.<br /><br />
            
            Sabemos que encontrar um sal√£o de beleza de confian√ßa pode ser um desafio, especialmente em cidades grandes onde h√° diversas op√ß√µes dispon√≠veis.<br />
            Nosso objetivo √© simplificar essa jornada, permitindo que voc√™ descubra sal√µes pr√≥ximos, compare servi√ßos e fa√ßa agendamentos com poucos toques na tela.<br /><br />
            
            üîç <b>Busca Inteligente</b> ‚Äì Encontre sal√µes de beleza perto de voc√™ de forma r√°pida e pr√°tica.<br />
            ‚≠ê <b>Avalia√ß√µes e Feedbacks</b> ‚Äì Consulte opini√µes de outros usu√°rios para escolher o melhor servi√ßo.<br />
            üìÖ <b>Agendamento Online</b> ‚Äì Marque hor√°rios diretamente pelo aplicativo, sem precisar ligar para o sal√£o.<br />
            üí∞ <b>Promo√ß√µes e Ofertas</b> ‚Äì Descubra descontos e pacotes especiais oferecidos pelos estabelecimentos parceiros.<br /><br />
            
            Nosso compromisso √© oferecer uma plataforma confi√°vel e acess√≠vel para clientes e profissionais da beleza, ajudando a criar conex√µes e facilitar o acesso a servi√ßos de qualidade.<br /><br />
            
            Seja bem-vindo ao <b>BeYou</b>, a sua nova forma de encontrar sal√µes de beleza com facilidade e praticidade!

            </Descricao>
        </Opcoes>
    );
}

function PerguntasFrequentes({ ativo, setItemAtivo }) {
    return (
        <Opcoes onClick={setItemAtivo}>
            <TituloOpcoes>Perguntas Frequentes (FAQ)</TituloOpcoes>
            <Descricao visivel={ativo}>
            <b>Perguntas Frequentes (FAQ)</b><br /><br />

            <b>1. Como fa√ßo para agendar um servi√ßo pelo BeYou?</b><br />
            Basta fazer login, escolher um sal√£o de beleza, selecionar o servi√ßo desejado e o hor√°rio dispon√≠vel. Em poucos cliques, seu agendamento estar√° confirmado!<br /><br />

            <b>2. Preciso pagar pelo servi√ßo direto no aplicativo?</b><br />
            Alguns sal√µes permitem o pagamento online, enquanto outros preferem o pagamento no local. As op√ß√µes dispon√≠veis aparecer√£o no momento do agendamento.<br /><br />

            <b>3. Posso remarcar ou cancelar um agendamento?</b><br />
            Sim! Acesse a √°rea ‚ÄúMeus Agendamentos‚Äù, escolha o servi√ßo desejado e selecione ‚ÄúRemarcar‚Äù ou ‚ÄúCancelar‚Äù. Lembre-se de verificar a pol√≠tica do sal√£o sobre cancelamentos.<br /><br />

            <b>4. O aplicativo √© gratuito?</b><br />
            Sim, o uso do BeYou √© totalmente gratuito para os clientes. Voc√™ s√≥ paga pelos servi√ßos que contratar nos sal√µes.<br /><br />

            <b>5. Como os sal√µes s√£o avaliados?</b><br />
            Ap√≥s realizar um servi√ßo, voc√™ pode deixar sua avalia√ß√£o e coment√°rio. Isso ajuda outros usu√°rios e tamb√©m os sal√µes a melhorarem cada vez mais.<br /><br />

            <b>6. Preciso permitir o acesso √† minha localiza√ß√£o?</b><br />
            Voc√™ pode usar o BeYou sem ativar a localiza√ß√£o, mas ao permitir o acesso, conseguimos mostrar sal√µes mais pr√≥ximos e sugest√µes personalizadas.<br /><br />

            <b>7. Meus dados est√£o seguros no BeYou?</b><br />
            Sim! Levamos a privacidade muito a s√©rio. Seus dados s√£o protegidos e utilizados apenas conforme descrito em nossa <b>Pol√≠tica de Privacidade</b>.<br /><br />

            <b>8. Posso indicar o BeYou para sal√µes que conhe√ßo?</b><br />
            Claro! Incentivamos que voc√™ indique o BeYou para sal√µes e profissionais da sua confian√ßa. Assim, a comunidade cresce com qualidade.<br /><br />

            <b>Ficou com mais d√∫vidas?</b><br />
            Entre em contato com nosso suporte atrav√©s do aplicativo ou envie um e-mail para <i>suporte@beyou.app</i>. Estamos aqui para te ajudar! üíú

            </Descricao>
        </Opcoes>
    );
}

function Idiomas({ ativo, setItemAtivo }) {
    const [idiomaSelecionado, setIdiomaSelecionado] = useState('pt');

    const trocarIdioma = (idioma) => {
        setIdiomaSelecionado(idioma);
      };
  
    return (
        <Opcoes onClick={setItemAtivo}>
        <TituloOpcoes>Idiomas</TituloOpcoes>
  
        {ativo && (
          <Descricao visivel={ativo}>
            <p><b>Selecione o idioma:</b></p>
  
            <OpcaoIdioma>
                <input
                    type="radio"
                    id="portugues"
                    name="idioma"
                    value="pt"
                    checked={idiomaSelecionado === 'pt'}
                    onChange={() => setIdiomaSelecionado('pt')}
                />
              <label htmlFor="portugues">Portugu√™s</label>
            </OpcaoIdioma>
  
            <OpcaoIdioma>
                <input
                    type="radio"
                    id="ingles"
                    name="idioma"
                    value="en"
                    checked={idiomaSelecionado === 'en'}
                    onChange={() => setIdiomaSelecionado('en')}
                />
                <label htmlFor="ingles">Ingl√™s</label>
            </OpcaoIdioma>

  
            <br />
            <b>Idioma selecionado:</b> {idiomaSelecionado === 'pt' ? 'Portugu√™s' : 'Ingl√™s'}
          </Descricao>
        )}
      </Opcoes>
    );
}

function ConfiguracaoNotificacao({ ativo, setItemAtivo }) {
    const [notificacoesAtivas, setNotificacoesAtivas] = useState(true);
    const [tipoNotificacao, setTipoNotificacao] = useState({ email: false, push: true, sistema: true });
    const [frequencia, setFrequencia] = useState('imediato');
    const [notificacoesEspecificas, setNotificacoesEspecificas] = useState({
        mensagens: false,
        atualizacoes: false,
        promocoes: false,
        lembretes: false
    });
    const [horario, setHorario] = useState("08:00 - 22:00");
    const [modoNaoPerturbe, setModoNaoPerturbe] = useState(false);
    const [somVibracao, setSomVibracao] = useState("som");

    const opcoesFrequencia = ['imediato', 'diario', 'semanal'];
    const opcoesSom = ['som', 'vibracao', 'silencioso'];

    return (
            <Opcoes onClick={setItemAtivo}>
                <TituloOpcoes>Configura√ß√µes de Notifica√ß√µes</TituloOpcoes>
                {ativo && (
                    <Descricao visivel={ativo} onClick={(e) => e.stopPropagation()}>
                        <form className="config-form">
                            <fieldset>
                                <legend>üîî Notifica√ß√µes Gerais</legend>
                                <label>
                                    <input
                                        type="checkbox" 
                                        checked={notificacoesAtivas} 
                                        onChange={() => setNotificacoesAtivas(!notificacoesAtivas)}
                                    />
                                    Ativar/Desativar
                                </label>
                            </fieldset>

                            <fieldset>
                                <legend>üì¨ Tipo de Notifica√ß√£o</legend>
                                {Object.entries(tipoNotificacao).map(([tipo, valor]) => (
                                    <label key={tipo}>
                                        <input
                                            type="checkbox"
                                            checked={valor}
                                            onChange={() => setTipoNotificacao({ ...tipoNotificacao, [tipo]: !valor })}
                                        />
                                        {tipo === "email" ? "üì© E-mail" : tipo === "push" ? "üì± Push" : "üîî Sistema"}
                                    </label>
                                ))}
                            </fieldset>

                            <fieldset>
                                <legend>‚è± Frequ√™ncia</legend>
                                {opcoesFrequencia.map((opcao) => (
                                    <label key={opcao}>
                                        <input
                                            type="radio"
                                            name="frequencia"
                                            value={opcao}
                                            checked={frequencia === opcao}
                                            onChange={() => setFrequencia(opcao)}
                                        />
                                        {opcao.charAt(0).toUpperCase() + opcao.slice(1)}
                                    </label>
                                ))}
                            </fieldset>

                            <fieldset>
                                <legend>üéØ Notifica√ß√µes Espec√≠ficas</legend>
                                {Object.keys(notificacoesEspecificas).map((key) => (
                                    <label key={key}>
                                        <input
                                            type="checkbox"
                                            checked={notificacoesEspecificas[key]}
                                            onChange={() =>
                                                setNotificacoesEspecificas({
                                                    ...notificacoesEspecificas,
                                                    [key]: !notificacoesEspecificas[key]
                                                })
                                            }
                                        />
                                        {key.charAt(0).toUpperCase() + key.slice(1)}
                                    </label>
                                ))}
                            </fieldset>

                            <fieldset>
                                <legend>üïó Hor√°rio de Notifica√ß√£o</legend>
                                <input
                                    type="text"
                                    value={horario}
                                    onChange={(e) => setHorario(e.target.value)}
                                    className="horario-input"
                                />
                                <label>
                                    <input
                                        type="checkbox"
                                        checked={modoNaoPerturbe}
                                        onChange={() => setModoNaoPerturbe(!modoNaoPerturbe)}
                                    />
                                    Ativar Modo N√£o Perturbe
                                </label>
                            </fieldset>

                            <fieldset>
                                <legend>üéµ Som ou Vibra√ß√£o</legend>
                                {opcoesSom.map((opcao) => (
                                    <label key={opcao}>
                                        <input
                                            type="radio"
                                            name="somVibracao"
                                            value={opcao}
                                            checked={somVibracao === opcao}
                                            onChange={() => setSomVibracao(opcao)}
                                        />
                                        {opcao.charAt(0).toUpperCase() + opcao.slice(1)}
                                    </label>
                                ))}
                            </fieldset>
                        </form>
                    </Descricao>
                )}
            </Opcoes>
    );
}


function RelatarProblema({ ativo, setItemAtivo }) {
    const [texto, setTexto] = useState("");

    return (
        <Opcoes onClick={setItemAtivo}>
            <TituloOpcoes>Relatar Problema</TituloOpcoes>
            <Descricao visivel={ativo} onClick={(e) => e.stopPropagation()}>
                <TextoProblema 
                    value={texto} 
                    onChange={(e) => setTexto(e.target.value)}
                    placeholder="Descreva o problema aqui..."
                />
                <BotaoEnviar onClick={(e) => {
                    e.stopPropagation();
                    alert("Problema enviado!");
                }}>
                    Enviar
                </BotaoEnviar>
            </Descricao>
        </Opcoes>
    );
}

export default MeuPerfil;
